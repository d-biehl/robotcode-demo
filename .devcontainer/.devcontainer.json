// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/ubuntu
{
    "name": "robotcode demo devcontainer",
    "build": {
        "dockerfile": "Dockerfile"
    },
    // Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
    //"build": {
    //   "dockerfile": "Dockerfile"
    //},
    // Features to add to the dev container. More info: https://containers.dev/features.
    // "features": {},
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],
    // Use 'postCreateCommand' to run commands after the container is created.
    "postCreateCommand": "poetry install --no-root",
    // Configure tool-specific properties.
    // "customizations": {},
    // Uncomment to connect as root instead. More info: https://aka.ms/dev-je+-containers-non-root.
    "remoteUser": "vscode",
    "customizations": {
        "vscode": {
            "extensions": [
                "d-biehl.robotcode",
                "ms-python.python",
                "tamasfe.even-better-toml",
                "gruntfuggly.todo-tree",
                "charliermarsh.ruff",
                "ms-python.black-formatter",
                "ms-python.mypy-type-checker"
            ],
            "settings": {
                "files.exclude": {
                    "**/__pycache__": true,
                    "**/.idea": true,
                    "**/.mypy_cache": true,
                    "**/.pytest_cache": true,
                    "**/.hatch": true,
                    "**/.ruff_cache": true,
                    "**/.robotcode_cache": true
                },
                "files.watcherExclude": {
                    "**/__pycache__": true,
                    "**/.idea": true,
                    "**/.mypy_cache": true,
                    "**/.pytest_cache": true,
                    "**/.hatch": true,
                    "**/.ruff_cache": true,
                    "**/.robotcode_cache": true
                },
                "python.linting.mypyEnabled": true,
                "python.terminal.activateEnvInCurrentTerminal": true,
                "python.formatting.provider": "black",
                "python.analysis.completeFunctionParens": true,
                "python.linting.mypyArgs": [
                    "--show-column-numbers"
                ],
                "git.followTagsWhenSync": true,
                "git.enableSmartCommit": true,
                "ruff.importStrategy": "fromEnvironment",
                "python.linting.enabled": true
            }
        }
    }
}
